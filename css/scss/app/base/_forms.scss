//
// Forms
// --------------------------------------------------

.form-control {
	border: none;
    border-bottom: $ot-border-width solid $ot-border-color;
    background-color: transparent;
}


// Form validation
//
// Provide feedback to users when form field values are valid or invalid. Works
// primarily for client-side validation via scoped `:invalid` and `:valid`
// pseudo-classes but also includes `.is-invalid` and `.is-valid` classes for
// server side validation.
// 
// Align with current bootstrap form validation

@mixin form-validation-state($state, $color) {

  .#{$state}-feedback {
    display: none;
    margin-top: $form-feedback-margin-top;
    font-size: $form-feedback-font-size;
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    width: 250px;
    padding: .5rem;
    margin-top: .1rem;
    font-size: .875rem;
    line-height: 1;
    color: #fff;
    background-color: rgba($color, .8);
    border-radius: .2rem;
  }

  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }


  // TODO: redo check markup lol crap
  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      + .form-check-label {
        color: $color;
      }
    }
  }

  // custom radios and checks
  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-indicator {
        background-color: rgba($color, .4);
      }
      ~ .custom-control-description {
        color: $color;
      }
      &:focus {
        ~ .custom-control-indicator {
          box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-control {
        border-color: $color;

        &::before { border-color: inherit; }
      }
      &:focus {
        ~ .custom-file-control {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }
}

@include form-validation-state("valid", $form-feedback-valid-color);
@include form-validation-state("invalid", $form-feedback-invalid-color);


// Front End Submit
// --------------------------------------------------
.cmb2-id--ot-bv-link-submit-email-honeypot {
	display: none;
}

// Mailing List
// --------------------------------------------------
.ot_mailling_list_widget {
	.control-label {
		align-self: center;
		margin-bottom: 0;
		@include media-breakpoint-up(md) {
			text-align: right;
		}
	}
}